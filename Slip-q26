.1)Consider the following entities and their relationship. [15] Doctor ( doc_no, dname, address ,city ,area) Hospital (hosp_no, hname, hcity) Doctor-Hospital related with many-one relationship. Create a RDB in 3NF for above and solve the following. Using above database write a script in PHP to print the Doctor visiting to the Hospital in tabular format. Accept Hospital name from user

//SQL CODE

CREATE TABLE Hospital (
    hosp_no INT PRIMARY KEY,
    hname VARCHAR(255) NOT NULL,
    hcity VARCHAR(255) NOT NULL
);

CREATE TABLE Doctor (
    doc_no INT PRIMARY KEY,
    dname VARCHAR(255) NOT NULL,
    address VARCHAR(255),
    city VARCHAR(255),
    area VARCHAR(255),
    hosp_no INT,
    FOREIGN KEY (hosp_no) REFERENCES Hospital(hosp_no)
);

INSERT INTO Hospital (hosp_no, hname, hcity) VALUES
(1, 'City Hospital', 'New York'),
(2, 'Greenwood Medical Center', 'Los Angeles');

INSERT INTO Doctor (doc_no, dname, address, city, area, hosp_no) VALUES
(1, 'Dr. Smith', '123 Main St', 'New York', 'Downtown', 1),
(2, 'Dr. Jones', '456 Elm St', 'New York', 'Uptown', 1),
(3, 'Dr. Brown', '789 Maple St', 'Los Angeles', 'Westside', 2);

//PHP CODE

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Doctors Visiting Hospital</title>
</head>
<body>

<h2>Find Doctors by Hospital Name</h2>

<form method="POST" action="">
    <label for="hospital_name">Enter Hospital Name:</label><br>
    <input type="text" name="hospital_name" required><br><br>
    <input type="submit" value="Find Doctors">
</form>

<?php
if ($_SERVER['REQUEST_METHOD'] == 'POST') {
    $hospital_name = $_POST['hospital_name'];

    // Database connection
    $conn = new mysqli('localhost', 'username', 'password', 'database_name');

    // Check connection
    if ($conn->connect_error) {
        die("Connection failed: " . $conn->connect_error);
    }

    // SQL query to get doctors visiting the specified hospital
    $sql = "SELECT d.dname, d.address, d.city, d.area 
            FROM Doctor d 
            JOIN Hospital h ON d.hosp_no = h.hosp_no 
            WHERE h.hname = ?";
    
    $stmt = $conn->prepare($sql);
    $stmt->bind_param("s", $hospital_name);
    $stmt->execute();
    $result = $stmt->get_result();

    // Display results in a table
    if ($result->num_rows > 0) {
        echo "<table border='1'>
                <tr>
                    <th>Doctor Name</th>
                    <th>Address</th>
                    <th>City</th>
                    <th>Area</th>
                </tr>";
        while ($row = $result->fetch_assoc()) {
            echo "<tr>
                    <td>" . htmlspecialchars($row['dname']) . "</td>
                    <td>" . htmlspecialchars($row['address']) . "</td>
                    <td>" . htmlspecialchars($row['city']) . "</td>
                    <td>" . htmlspecialchars($row['area']) . "</td>
                  </tr>";
        }
        echo "</table>";
    } else {
        echo "<p>No doctors found for the specified hospital.</p>";
    }

    $stmt->close();
    $conn->close();
}
?>

</body>
</html>

Q.2 A) Generate a random array of 50 integers and display them using a line chart, scatter plot, histogram and box plot. Apply appropriate color, labels and styling options. [10] 2.Create two lists, one representing subject names and the other representing marks obtained in those subjects. Display the data in bar chart. 

import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

# Set the random seed for reproducibility
np.random.seed(42)

# Q.2 A) Generate a random array of 50 integers
random_data = np.random.randint(1, 101, size=50)

# Display the data
print("Random Array of 50 Integers:")
print(random_data)

# Line Chart
plt.figure(figsize=(10, 6))
plt.plot(random_data, marker='o', color='blue', linestyle='-', linewidth=2, markersize=5)
plt.title('Line Chart of Random Integers')
plt.xlabel('Index')
plt.ylabel('Value')
plt.grid(True)
plt.show()

# Scatter Plot
plt.figure(figsize=(10, 6))
plt.scatter(range(len(random_data)), random_data, color='green', s=50)
plt.title('Scatter Plot of Random Integers')
plt.xlabel('Index')
plt.ylabel('Value')
plt.grid(True)
plt.show()

# Histogram
plt.figure(figsize=(10, 6))
sns.histplot(random_data, bins=10, kde=True, color='purple')
plt.title('Histogram of Random Integers')
plt.xlabel('Value')
plt.ylabel('Frequency')
plt.grid(True)
plt.show()

# Box Plot
plt.figure(figsize=(10, 6))
sns.boxplot(y=random_data, color='orange')
plt.title('Box Plot of Random Integers')
plt.ylabel('Value')
plt.grid(True)
plt.show()

# Q.2 B) Create two lists for subject names and marks
subjects = ['Math', 'Science', 'English', 'History', 'Geography']
marks = [85, 90, 78, 88, 92]

# Bar Chart
plt.figure(figsize=(8, 6))
plt.bar(subjects, marks, color='skyblue')
plt.title('Marks Distribution by Subject')
plt.xlabel('Subjects')
plt.ylabel('Marks')
plt.ylim(0, 100)  # Set y-axis limit for better visualization
plt.grid(axis='y')
plt.show()
